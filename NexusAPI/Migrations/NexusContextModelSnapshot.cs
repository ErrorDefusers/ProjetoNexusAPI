// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusAPI.Domains;

#nullable disable

namespace NexusAPI.Migrations
{
    [DbContext(typeof(NexusContext))]
    partial class NexusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NexusAPI.Domains.Cursos", b =>
                {
                    b.Property<Guid>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(500)");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("NexusAPI.Domains.Ferramentas", b =>
                {
                    b.Property<Guid>("IdFerramenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("BIT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("VARCHAR (100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("IdFerramenta");

                    b.ToTable("Ferramentas");
                });

            modelBuilder.Entity("NexusAPI.Domains.Funcionarios", b =>
                {
                    b.Property<Guid>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoFuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdFuncionario");

                    b.HasIndex("SetorId");

                    b.HasIndex("TipoFuncionarioId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("NexusAPI.Domains.FuncionariosCursos", b =>
                {
                    b.Property<Guid>("IdFuncionarioCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdFuncionarioCurso");

                    b.HasIndex("CursoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FuncionariosCursos");
                });

            modelBuilder.Entity("NexusAPI.Domains.Setores", b =>
                {
                    b.Property<Guid>("IdSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoSetor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdSetor");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("NexusAPI.Domains.TiposFuncionarios", b =>
                {
                    b.Property<Guid>("IdTipoFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoDeFuncionario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("IdTipoFuncionario");

                    b.ToTable("TiposFuncionarios");
                });

            modelBuilder.Entity("NexusAPI.Domains.Funcionarios", b =>
                {
                    b.HasOne("NexusAPI.Domains.Setores", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusAPI.Domains.TiposFuncionarios", "TipoFuncionario")
                        .WithMany()
                        .HasForeignKey("TipoFuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");

                    b.Navigation("TipoFuncionario");
                });

            modelBuilder.Entity("NexusAPI.Domains.FuncionariosCursos", b =>
                {
                    b.HasOne("NexusAPI.Domains.Cursos", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusAPI.Domains.Funcionarios", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Funcionario");
                });
#pragma warning restore 612, 618
        }
    }
}
